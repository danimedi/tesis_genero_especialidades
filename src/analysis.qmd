---
title: "Análisis"
author: "Daniel Medina"
format: html
editor: source
---

Cargar paquetes utilizados.

```{r}
library(here)
library(readr)
library(dplyr)
library(ggplot2)
library(tableone)
library(ggsci)
library(ggthemes)
library(broom.mixed)
library(compareGroups)
library(lme4)
library(sjPlot)

pacman::p_load(
  rio,          # Importación de ficheros
  here,         # localizador de ficheros
  skimr,        # obtener una visión general de los datos
  tidyverse,    # gestión de datos + gráficos ggplot2 
  gtsummary,    # resumen estadístico y tests
  rstatix,      # resumen estadístico y pruebas estadísticas
  janitor,      # añadir totales y porcentajes a las tablas
  scales,       # convertir fácilmente proporciones en porcentajes  
  flextable,    # convertir tablas en imágenes bonitas
  broom,        # ordenar resultados de regresiones
  lmtest,       # pruebas de razón de verosimilitud
  parameters,   # alternativa para ordenar los resultados de las regresiones
  ver           # alternativa para visualizar gráficos de bosque
)
```

Cargar datos y transformar columnas.

```{r}
dat <- suppressMessages(read_csv(here("data/full_deidentified_data.csv")))
nrow(dat) ## 67007
dat <- dat %>% filter(year >= 2016)
nrow(dat) ## 49213
dat <- dat %>% filter(!is.na(genero))
nrow(dat) ## 48013

dat$ingreso <- dat$ingreso %>%  factor(levels = c(0,1),
                                        labels = c("No","Sí"))
dat$genero2 <- dat$genero %>%  factor(levels = c(0,1),
                                        labels = c("Masculino","Femenino"))
dat$year2 <- dat$year %>%  as.factor()
dat$especialidad_tipo <- dat$especialidad_tipo %>%  as.factor()
dat$region <- dat$region %>%  as.factor()
dat$especialidad_quirurgica <- dat$especialidad_quirurgica %>%  factor(levels = c(0,1),
                                        labels = c("No","Sí"))
dat$subespecialidad <- dat$subespecialidad %>%  factor(levels = c(0,1),
                                        labels = c("No","Sí"))
```


# Estadísticas generales

```{r}
# Número total de postulantes
nrow(dat)
# Número de postulantes con género asignado
sum(!is.na(dat$genero))
# Porcentaje de postulantes con género asignado
i <- is.na(dat$genero)
(1 - mean(i)) * 100
# Número de mujeres ...
sum(dat$genero == 1, na.rm = TRUE)
# y de hombres
sum(dat$genero == 0, na.rm = TRUE)
# Porcentaje de mujeres ...
sum(dat$genero == 1, na.rm = TRUE) / sum(!is.na(dat$genero))
# y de hombres
sum(dat$genero == 0, na.rm = TRUE) / sum(!is.na(dat$genero))
```

# Gráficos

```{r}
# Filter the specialties with most female applicants 
j <- sort(table(dat$especialidad), decreasing = TRUE)[1:10]
j <- names(j)

x <- dat[dat$especialidad %in% j, ]

# Make a line graph with those specialties
x <- x %>%
  group_by(year, especialidad) %>%
  dplyr::summarize(p_mujeres = mean(genero, na.rm = TRUE))

p_years <- dat %>% group_by(year) %>% dplyr::summarize(p_total = mean(genero, na.rm = TRUE))
x <- left_join(x, p_years, by = "year")

ggplot(x, aes(year, p_mujeres, color = reorder(especialidad,-p_mujeres))) +
  geom_point()+
  geom_line(size=0.6) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Especialidad") +
  scale_y_continuous(limits = c(0,1), breaks=seq(0,1,0.2))+
  scale_color_stata()

```


# Tabla 1

```{r}
x <- dat[c("year2", "genero2", "ingreso", "especialidad_tipo", "subespecialidad", "region")]
skim(x)
CreateTableOne(data = x) # option 1

# Option 2
tabla1 <- compareGroups(data = x)
tabla1 <- createTable(tabla1)
tabla1  
export2xls(tabla1, here("output/tabla1.xlsx"))

# Option 3
x %>% 
tbl_summary()
```

# Tablas 2 y 3

```{r}
x %>% 
  tbl_summary(
    by = year2,
    label = list(genero2   ~ "Sexo"),                           
    missing_text = "Missing" 
  ) %>%
  add_p() %>%
  add_overall()


x %>% 
  tbl_summary(by = genero2, missing_text = "Missing") %>%
  add_p() %>%
  add_overall()
```

# Tabla 4

```{r}
x <- na.omit(x)

x %>%
  tbl_uvregression(
    method = glm,
    y = ingreso,
    method.args = list(family = binomial),
    exponentiate = TRUE
  )
```

# Generalized linear mixed-effects models

```{r}
# ---- Step 1: Building empty model ----

x <- dat[c("year2", "genero2", "ingreso", "especialidad", "especialidad_tipo", "region")]
   
model_empty <- glmer(ingreso ~ ( 1 | especialidad), data = x, family = "binomial")
summary(model_empty)

icc <- model_empty@theta[1]^2/ (model_empty@theta[1]^2 + (3.14159^2 / 3))
icc
# Intraclass correlation coefficient (ICC) = 0.1954432
# This indicates that 21% of the chance of emtering is explained by between-classroom differences 

# ---- Step 2: Building the intermediate models ----

# Constrained intermediate model (CIM), the model contains all level-1
# variables, all level-2 variables as well as all intra-level interactions
CIM <- glmer(
  ingreso ~ genero2 + region + year2 + (1 | especialidad),
  data = x,
  family = "binomial"
)
summary(CIM)
paste("FYI: The deviance of the CIM is:", CIM@devcomp$cmp[[8]])
# "FYI: The deviance of the CIM is: 57838.1265957355"

# Augmented intermediate model (AIM), the model similar to the constrained
# intermediate model with the exception that it includes the random slope term
AIM <- glmer(
  ingreso ~ genero2 + region  + year2 + (1 + year2 | especialidad),
  data = x,
  family = "binomial"
)
summary(AIM)
paste("FYI: The deviance of the AIM is:", AIM@devcomp$cmp[[8]])
# "FYI: The deviance of the AIM is: 57396.3677485944"

# See lme4 convergence warnings: troubleshooting https://rstudio-pubs-static.s3.amazonaws.com/33653_57fc7b8e5d484c909b615d8633c01d51.html
```

Comparando ambos modelos, el modelo CIM (Constrained Intermediate Model) tuvo un mejor desempeño, por lo que este es el modelo elegido.

```{r}
# Likelihood-ratio test comparing the deviance of the CIM with the deviance of the AIM.
anova(CIM, AIM)
# p-value: < 2.2e-16
```

Modelo final ...

```{r}
CIM1 <- glmer(
  ingreso ~ genero2 + region + year2 + especialidad_tipo + (1 | especialidad),
  data = x,
  family = "binomial"
)

tidy_robust(CIM1, exponentiate = T, conf.int = T)
tab_model(
  CIM1,
  show.re.var = T, show.reflvl = T,
  file = "output/model_output.html"
)
```












