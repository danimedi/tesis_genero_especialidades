---
title: "Análisis"
author: "Daniel Medina"
format: html
editor: source
---

```{r}
library(here)
library(readr)
library(dplyr)
library(ggplot2)
dat <- suppressMessages(read_csv(here("data/full_deidentified_data.csv")))
```

# Estadísticas descriptivas generales

Algunos datos generales

```{r}
# Número total de postulantes
nrow(dat)
# Número de postulantes con género asignado
sum(!is.na(dat$genero))
# Porcentaje de postulantes con género asignado
i <- is.na(dat$genero)
(1 - mean(i)) * 100
# Número de mujeres ...
sum(dat$genero == 1, na.rm = TRUE)
# y de hombres
sum(dat$genero == 0, na.rm = TRUE)
# Porcentaje de mujeres ...
sum(dat$genero == 1, na.rm = TRUE) / sum(!is.na(dat$genero))
# y de hombres
sum(dat$genero == 0, na.rm = TRUE) / sum(!is.na(dat$genero))
```

## Distribución de género en los distintos años

La tabla 1 incluye las siguientes columnas:

-   Año
-   Número de postulantes
-   Número y porcentaje de postulantes con género asignado
-   Número de mujeres y hombres postulantes (con el porcentaje de mujeres)

```{r tabla-1}
res <- dat %>%
  group_by(year) %>%
  summarize(
    n_postulantes = length(year),
    n_genero = sum(!is.na(genero)),
    p_genero = sum(!is.na(genero)) / length(year),
    n_mujeres = sum(genero == 1, na.rm = TRUE),
    p_mujeres = sum(genero == 1, na.rm = TRUE) / sum(!is.na(genero)),
    n_hombres = sum(genero == 0, na.rm = TRUE),
    p_hombres = sum(genero == 0, na.rm = TRUE) / sum(!is.na(genero))
  )
res
write.table(res, here("output/tabla_1.txt"), sep = "\t", row.names = FALSE)
```


# Comparación de especialidades

## Distribución de género en las distintas especialidades.

Esta tabla estratifica en las distintas especialidades.

Las columnas de esta tabla son:

-   Especialidad
-   Número de postulantes
-   Número de mujeres y hombres
-   Porcentaje de mujeres y hombres

```{r tabla-2}
res <- dat %>%
  group_by(especialidad) %>%
  summarize(
    n_postulantes = length(especialidad),
    n_genero = sum(!is.na(genero)),
    p_genero = sum(!is.na(genero)) / length(especialidad),
    n_mujeres = sum(genero == 1, na.rm = TRUE),
    p_mujeres = sum(genero == 1, na.rm = TRUE) / sum(!is.na(genero)),
    n_hombres = sum(genero == 0, na.rm = TRUE),
    p_hombres = sum(genero == 0, na.rm = TRUE) / sum(!is.na(genero))
  )
res
write.table(res, here("output/tabla_2.txt"), sep = "\t", row.names = FALSE)
```

El código a continuación genera gráficos de la distribución de género de cada una de las especialidades.

```{r graphs-1}
i_no_gender <- is.na(dat$genero)
x <- dat[!i_no_gender, ] %>%
  group_by(year, especialidad) %>%
  summarize(women = mean(genero))

for (specialty in unique(x$especialidad)) {
  i <- x$especialidad == specialty
  n <- sum(dat[!i_no_gender, ]$especialidad == specialty)
  p <- ggplot(x[i, ], aes(year, women)) +
    geom_line() +
    ggtitle(specialty) +
    labs(subtitle = paste0("Número de personas: ", n), x = "Año", y = "Proporción de mujeres") +
    scale_x_continuous(breaks = seq(2013, 2023, by = 1))
  ggsave(here("output", paste0("graph_1-", specialty, ".png")))
  print(p)
}
```

## Prueba estadística

Identificar las especialidades con mayor diferencia de distribución de género a través de una prueba estadística para determinar las probabilidades de que las diferencias observadas, en comparación con la distribución de género global sean igual de grandes.

Nota: es necesario realizar algún tipo de corrección, debido a estar realizando múltiples pruebas estadísticas.

A continuación se realiza la prueba estadística mediante un modelo de regresión lineal en el que se tiene al género como variable dependiente (outcome), mientras que se tienen a las variables especialidad y el año como independientes (predictors). Se realiza un modelo estadístico por cada una de las especialidades. En cada uno de estos modelos estadísticos se compara a la una especialidad con el resto y se obtiene el valor de p del coeficiente de la especialidad.

Como resultado tenemos las especialidades que son realmente distintas en cuanto a distribución de género respecto a las diferencias globales (esperadas).

```{r}
x <- dat[!is.na(dat$genero), ]
specialties <- unique(x$especialidad)
list_models <- vector("list", length(specialties))
for (i in seq_along(specialties)) {
  list_models[[i]] <- glm(
    genero ~ ifelse(
      especialidad == specialties[[i]],
      1, 0
    ) + year,
    data = x
  )
}
df_res <- data.frame("Especialidad" = specialties)

p_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  summary_model <- summary(list_models[[i]])
  p_values[[i]] <- summary_model$coefficients[2, 4] # p-value of specialty
}
p_values <- unlist(p_values)
df_res$p_values <- p_values

# Bonferroni correction
p_value_corrected <- 0.05 / length(p_values)

or_values <- conf_int_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
  conf_int_values[[i]] <- exp(
    suppressMessages(
      # Confidence interval of specialty
      confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
    )
  )
}
df_res$or_values <- or_values
df_res$conf_int_values <- conf_int_values

i <- p_values <= p_value_corrected
df_res$p_value_significant <- i
specialties[i]
```

Ahora creamos una tabla con los resultados obtenidos. Esta tabla tiene las siguientes columnas:

- Especialidad
- Número de postulantes
- OR y OR corregido (con el tiempo)
- Valor de p
- ¿Valor de p significativo? (inferior a valor de p corregido por Bonferroni)

```{r tabla-3}
i <- order(df_res$p_values)
df_res <- df_res[i, ]
df_res$or_values <- unlist(df_res$or_values)
df_res$conf_int_lower <- unlist(lapply(df_res$conf_int_values, \(x) x[1]))
df_res$conf_int_upper <- unlist(lapply(df_res$conf_int_values, \(x) x[2]))
df_res <- df_res[, colnames(df_res) != "conf_int_values"]
write.table(df_res, here("output/tabla_3.txt"), sep = "\t", row.names = FALSE)
```

# Estudio de tendencias

Algunos gráficos ...

```{r graph-2}
x <- dat
x$genero_factor <- ifelse(
  is.na(x$genero),
  "No género asignado",
  ifelse(
    x$genero == 1,
    "Femenino",
    "Masculino"
  )
)
x$genero_factor <- factor(x$genero_factor, levels = c("No género asignado", "Masculino", "Femenino"))

ggplot(x) +
  geom_bar(aes(year, fill = genero_factor)) +
  labs(x = "Año", y = "Número de postulantes", fill = "Género") +
  scale_fill_manual(values = c("No género asignado" = "grey80", "Masculino" = "#619CFF", "Femenino" = "#F8766D"))

ggsave(here("output/graph_2.png"))
```

Similar pero agrupados por especialidades.

```{r graph-3}
x <- dat
x$especialidad_tipo <- ifelse(
  dat$especialidad_tipo == "laboratorio_diagnostica", "De laboratorio y diagnóstica",
  ifelse(
    dat$especialidad_tipo == "medico_quirurgica", "Médico-quirúrgica",
    ifelse(
      dat$especialidad_tipo == "quirurgica", "Quirúrgica", "Clínica"
    )
  )
)
ggplot(x) +
  geom_bar(
    aes(year, fill = factor(especialidad_tipo, levels = c(
      "De laboratorio y diagnóstica", "Médico-quirúrgica", "Quirúrgica", "Clínica")
    ))
  ) + labs(x = "Año", y = "Número de postulantes", fill = "Tipo de especialidad")

ggsave(here("output/graph_3.png"))
```

Otro gráfico similar al primero, pero con líneas.

```{r graph-4}
# Separado en 4 subgrupos
p_specialty_types <- x %>%
  group_by(year, especialidad_tipo) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- x %>% group_by(year) %>% summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_specialty_types, p_years, by = c("year"))

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = especialidad_tipo)) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Tipo de especialidad")

ggsave(here("output/graph_4.png"))
```

Los mismos dos gráficos previos, pero agrupados en dos subgrupos (especialidades clínicas vs. quirúrgicas).

```{r graph-5}
x <- dat
x$especialidad_quirurgica <- ifelse(
  x$especialidad_quirurgica == 1, "Quirúrgica", "Clínica"
)
ggplot(x) +
  geom_bar(aes(year, fill = factor(
    especialidad_quirurgica, levels = c("Quirúrgica", "Clínica")
  ))) +
  labs(x = "Año", y = "Número de postulantes", fill = "Tipo de especialidad")

ggsave(here("output/graph_5.png"))
```

```{r graph-6}
# Separado en 2 subgrupos
p_specialty_types <- dat %>%
  group_by(year, especialidad_quirurgica) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- dat %>% group_by(year) %>% summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_specialty_types, p_years, by = c("year"))
p_data$especialidad_quirurgica <- ifelse(
  p_data$especialidad_quirurgica == 1, "Quirúrgica", "Clínica"
)

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = as.factor(especialidad_quirurgica))) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Tipo de especialidad")

ggsave(here("output/graph_6.png"))
```

Preferencias de hombres y mujeres por especialidades

```{r graph-7}
x <- dat
x$especialidad_quirurgica <- ifelse(
  dat$especialidad_quirurgica == 1, "Quirúrgica", "Clínica"
)

# Mujeres
ggplot(x[x$genero == 1, ]) +
  geom_bar(aes(year, fill = factor(
    especialidad_quirurgica, levels = c("Quirúrgica", "Clínica")
  ))) +
  labs(x = "Año", y = "Número de postulantes", fill = "Tipo de especialidad")
ggsave(here("output/graph_7-mujeres.png"))

# Hombres
ggplot(x[x$genero == 0, ]) +
  geom_bar(aes(year, fill = factor(
    especialidad_quirurgica, levels = c("Quirúrgica", "Clínica")
  ))) +
  labs(x = "Año", y = "Número de postulantes", fill = "Tipo de especialidad")
ggsave(here("output/graph_7-hombres.png"))
```

Esto y los porcentajes se expresa mejor en una tabla comparativa entre hombres y mujeres con la siguiente estructura:

- Años
- Hombres vs. Mujeres
  - Especialidad clínica vs. quirúrgica

```{r tabla-4}
# I am removing the missing gender data
x <- dat %>%
  filter(!is.na(genero)) %>%
  group_by(year, genero, especialidad_quirurgica) %>%
  count()
x
write.table(x, here("output/tabla_4-counts.txt"), sep = "\t", row.names = FALSE)

# Percentages
y <- dat %>%
  filter(!is.na(genero)) %>%
  group_by(year, genero) %>%
  summarize(p_quirugica = mean(especialidad_quirurgica))
y
write.table(y, here("output/tabla_4-percentages.txt"), sep = "\t", row.names = FALSE)
```

### Modelo estadístico

Para el estudio de la tendencia se puede realizar un modelo de regresión logística (variable dependiente: género, variable independiente: tiempo).

En primer lugar se realiza un modelo simple para demostrar que el género es alterado por el tiempo (años).

```{r}
x <- dat[!is.na(dat$genero), ]
model <- glm(genero ~ year, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, 4] # p-value
round(cbind(exp(coef(model)), exp(confint(model))), 3)
```

Del mismo modo, se podría realizar un modelo similar agregando variables para ajustar los resultados.

```{r}
x <- dat[!is.na(dat$genero), ]
model <- glm(genero ~ year + especialidad, family = "binomial", data = x)
model_summary <- summary(model)

model_summary$coefficients[2, "Pr(>|z|)"] # adjusted p-value of year
# ... and the OR + confidence interval
exp(coef(model)[2])
exp(confint(model, parm = 2))
```

También se podría usar un modelo de regresión logística estudiando la modificación de efecto ocasionada por las distintas especialidades o tipos de especialidades. Para esto se podría realizar un modelo estadístico por cada especialidad comparando esta con el resto de especialidades.

```{r}
x <- dat[!is.na(dat$genero), ]
model <- glm(genero ~ year * especialidad, family = "binomial", data = x)
model_summary <- summary(model)

p_value_corrected <- 0.05 / length(unique(x$especialidad))
i <- model_summary$coefficients[, 4] < 0.05
model_summary$coefficients[i, ]
```

```{r}
x <- dat[!is.na(dat$genero), ]

specialties <- unique(x$especialidad)
list_models <- vector("list", length(specialties))
for (i in seq_along(specialties)) {
  list_models[[i]] <- glm(
    genero ~ year * ifelse(
      especialidad == specialties[[i]],
      1, 0
    ),
    data = x
  )
}
list_models_summary <- lapply(list_models, summary)
names(list_models_summary) <- specialties
list_models_summary[1]

df_res <- data.frame("Especialidad" = specialties)

vector("list", length(nrow(df_res))) ->
  df_res$p_value_year ->
  df_res$p_value_specialty ->
  df_res$p_value_interaction

for (i in seq_along(list_models)) {
  summary_model <- summary(list_models[[i]])
  df_res$p_value_year[[i]] <- summary_model$coefficients[2, 4]
  df_res$p_value_specialty[[i]] <- summary_model$coefficients[3, 4]
  if (nrow(summary_model$coefficients) < 4) {
    df_res$p_value_interaction[[i]] <- NA
  } else {
    df_res$p_value_interaction[[i]] <- summary_model$coefficients[4, 4]
  }
}

for (j in 2:ncol(df_res)) {
  df_res[, j] <- unlist(df_res[, j])
}

# Bonferroni correction
p_value_corrected <- 0.05 / nrow(df_res)

# Specialties with statistical significance
i <- df_res$p_value_specialty <= p_value_corrected
specialties[i]

# Interactions with statistical significance
i <- df_res$p_value_interaction <= p_value_corrected
specialties[i]



# or_values <- conf_int_values <- vector("list", length(list_models))
# for (i in seq_along(list_models)) {
#   or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
#   conf_int_values[[i]] <- exp(
#     suppressMessages(
#       # Confidence interval of specialty
#       confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
#     )
#   )
# }
# df_res$or_values <- or_values
# df_res$conf_int_values <- conf_int_values


```


De forma simplificada se podría usar especialidades clínicas vs. quirúrgicas.

```{r}
x <- dat[!is.na(dat$genero), ]
model <- glm(genero ~ year * especialidad_quirurgica, family = "binomial", data = dat)
model_summary <- summary(model)
round(cbind(exp(coef(model)), exp(confint(model))), 2)
```

# Análisis: ingresantes

Tabla descriptiva de datos de ingresantes solamente.

```{r tabla-5}
dat_ingresantes <- filter(dat, ingreso == 1)

res <- dat_ingresantes %>%
  group_by(year) %>%
  summarize(
    n_ingresantes = length(year),
    n_genero = sum(!is.na(genero)),
    p_genero = sum(!is.na(genero)) / length(year),
    n_mujeres = sum(genero == 1, na.rm = TRUE),
    p_mujeres = sum(genero == 1, na.rm = TRUE) / sum(!is.na(genero)),
    n_hombres = sum(genero == 0, na.rm = TRUE),
    p_hombres = sum(genero == 0, na.rm = TRUE) / sum(!is.na(genero))
  )
res
write.table(res, here("output/tabla_5.txt"), sep = "\t", row.names = FALSE)
```

Datos de especialidades de los ingresantes solamente.

```{r tabla-6}
dat_ingresantes <- filter(dat, ingreso == 1)

res <- dat_ingresantes %>%
  group_by(especialidad) %>%
  summarize(
    n_ingresantes = length(especialidad),
    n_genero = sum(!is.na(genero)),
    p_genero = sum(!is.na(genero)) / length(especialidad),
    n_mujeres = sum(genero == 1, na.rm = TRUE),
    p_mujeres = sum(genero == 1, na.rm = TRUE) / sum(!is.na(genero)),
    n_hombres = sum(genero == 0, na.rm = TRUE),
    p_hombres = sum(genero == 0, na.rm = TRUE) / sum(!is.na(genero))
  )
res
write.table(res, here("output/tabla_6.txt"), sep = "\t", row.names = FALSE)
```

## Gráficos de ingresantes solamente

Algún gráfico que muestre la magnitud de la diferencia de postulantes e ingresantes.

```{r graph-8}
x <- dat[dat$year >= 2016, ]
x$ingreso <- ifelse(x$ingreso == 1, "Ingresó", "No ingresó")

ggplot(x) +
  geom_bar(aes(year, fill = factor(ingreso, levels = c("No ingresó", "Ingresó"))), position = "dodge") +
  labs(fill = "Resultado de postulación", x = "Año", y = "Número de postulantes")

ggsave(here("output/graph_8.png"))
```

Hacer los mismos gráficos

```{r graph-9}
dat_ingresantes <- filter(dat, ingreso == 1)

x <- dat_ingresantes
x$genero_factor <- ifelse(
  is.na(x$genero),
  "No género asignado",
  ifelse(
    x$genero == 1,
    "Femenino",
    "Masculino"
  )
)
x$genero_factor <- factor(x$genero_factor, levels = c("No género asignado", "Masculino", "Femenino"))

ggplot(x) +
  geom_bar(aes(year, fill = genero_factor)) +
  labs(x = "Año", y = "Número de ingresantes", fill = "Género") +
  scale_fill_manual(values = c("No género asignado" = "grey80", "Masculino" = "#619CFF", "Femenino" = "#F8766D"))

ggsave(here("output/graph_9.png"))
```

```{r graph-10}
x <- dat_ingresantes
x$especialidad_tipo <- ifelse(
  dat_ingresantes$especialidad_tipo == "laboratorio_diagnostica", "De laboratorio y diagnóstica",
  ifelse(
    dat_ingresantes$especialidad_tipo == "medico_quirurgica", "Médico-quirúrgica",
    ifelse(
      dat_ingresantes$especialidad_tipo == "quirurgica", "Quirúrgica", "Clínica"
    )
  )
)
ggplot(x) +
  geom_bar(
    aes(year, fill = factor(especialidad_tipo, levels = c(
      "De laboratorio y diagnóstica", "Médico-quirúrgica", "Quirúrgica", "Clínica")
    ))
  ) + labs(x = "Año", y = "Número de ingresantes", fill = "Tipo de especialidad")

ggsave(here("output/graph_10.png"))
```

```{r graph-11}
# Separado en 4 subgrupos
p_specialty_types <- x %>%
  group_by(year, especialidad_tipo) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- x %>% group_by(year) %>% summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_specialty_types, p_years, by = c("year"))

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = especialidad_tipo)) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Tipo de especialidad")

ggsave(here("output/graph_11.png"))
```

Lo mismo, separado solamente en especialidades quirúrgicas vs. clínicas.

```{r graph-12}
x$especialidad_quirurgica <- ifelse(
  x$especialidad_quirurgica == 1, "Quirúrgica", "Clínica"
)
ggplot(x) +
  geom_bar(aes(year, fill = factor(
    especialidad_quirurgica, levels = c("Quirúrgica", "Clínica")
  ))) +
  labs(x = "Año", y = "Número de ingresantes", fill = "Tipo de especialidad")

ggsave(here("output/graph_12.png"))
```


```{r graph-13}
x <- filter(dat, year >= 2016, ingreso == 1)

# Separado en 2 subgrupos
p_specialty_types <- x %>%
  group_by(year, especialidad_quirurgica) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- x %>% group_by(year) %>% summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_specialty_types, p_years, by = c("year"))
p_data$especialidad_quirurgica <- ifelse(
  p_data$especialidad_quirurgica == 1, "Quirúrgica", "Clínica"
)

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = as.factor(especialidad_quirurgica))) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Tipo de especialidad")

ggsave(here("output/graph_13.png"))
```

## Comparación en los ingresantes hombres vs. mujeres

Esto se puede representar mejor en una tabla comparativa con las siguientes columnas:

- Año
- Género (hombre vs. mujeres)
  - Número de postulantes
  - Número de ingresantes
  - Porcentaje de ingresantes (del género en cuestión)

```{r tabla-7}
x <- dat %>% group_by(year, genero, ingreso) %>% count()
x
write.table(x, here("output/tabla_7.txt"), sep = "\t", row.names = FALSE)

y <- dat %>%
  filter(!is.na(genero)) %>%
  group_by(year, genero) %>%
  summarize(p_quirugica = mean(ingreso))
y
write.table(y, here("output/tabla_7-percentages.txt"), sep = "\t", row.names = FALSE)
```

## Prueba estadística

Probar estadísticamente si la tendencia de género se conserva también en las distintas especialidades. Hacer lo mismo que al inicio en el estudio de tendencias, solo que exclusivamente para los ingresantes

```{r}
x <- dat[!is.na(dat$genero), ]
x <- x[x$ingreso == 1, ]

model <- glm(genero ~ year, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, 4] # p-value
round(cbind(exp(coef(model)), exp(confint(model))), 3)

model <- glm(genero ~ year + especialidad, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, "Pr(>|z|)"] # adjusted p-value of year
# ... and the OR + confidence interval
exp(coef(model)[2])
exp(confint(model, parm = 2))
```

Además, también se puede corroborar si hay diferencias estadísticamente significativas en el ingreso de mujeres y hombres a las distintas especialidades. Para esto se puede hacer una regresión logística en la que el outcome sería el ingreso y los predictors el género y el año (para ajustar).

```{r}
# Modelo simple 
x <- dat[!is.na(dat$genero), ]
x <- x[x$year >= 2016, ]
model <- glm(ingreso ~ genero, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, 4] # p-value
round(cbind(exp(coef(model)), exp(confint(model))), 2)

# Agregando el año
model <- glm(ingreso ~ genero + year, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, 4] # p-value
round(cbind(exp(coef(model)), exp(confint(model))), 2)
```

# Análisis: especialidades vs. subespecialidades

Observar la magnitud de la diferencia

```{r}
x <- dat
x$subespecialidad <- ifelse(x$subespecialidad == 1, "Subespecialidad", "Especialidad")

ggplot(x) +
  geom_bar(aes(year, fill = factor(subespecialidad, levels = c("Subespecialidad", "Especialidad"))), position = "dodge") +
  labs(fill = "Nivel de especialización", x = "Año", y = "Número de postulantes")
```

Obtener los mismos gráficos para especialidades y subespecialidades.

```{r}
dat_subspecialty <- dat[dat$subespecialidad == 1, ]

x <- dat_subspecialty
x$genero_factor <- ifelse(
  is.na(x$genero),
  "No género asignado",
  ifelse(
    x$genero == 1,
    "Femenino",
    "Masculino"
  )
)
x$genero_factor <- factor(x$genero_factor, levels = c("No género asignado", "Masculino", "Femenino"))

ggplot(x) +
  geom_bar(aes(year, fill = genero_factor)) +
  labs(x = "Año", y = "Número de postulantes", fill = "Género") +
  scale_fill_manual(values = c("No género asignado" = "grey80", "Masculino" = "#619CFF", "Femenino" = "#F8766D"))
```

Graficar línea de subespecialidades vs. tendencia global.

```{r}
# Separado en 2 subgrupos
p_specialty_types <- dat %>%
  group_by(year, subespecialidad) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- dat %>% group_by(year) %>% summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_specialty_types, p_years, by = c("year"))
p_data$subespecialidad <- ifelse(
  p_data$subespecialidad == 1, "Subespecialidad", "Especialidad"
)

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = as.factor(subespecialidad))) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Nivel de especialización")

```

# Análisis: región

Primero, visualizar distribución de género general en las distintas regiones.

```{r graph-14}
x <- dat
x$genero_factor <- ifelse(
  is.na(x$genero),
  "No género asignado",
  ifelse(
    x$genero == 1,
    "Femenino",
    "Masculino"
  )
)
x$genero_factor <- factor(
  x$genero_factor,
  levels = c("No género asignado", "Masculino", "Femenino")
)

x$region <- factor(
  x$region,
  levels = c("Lima", "Norte", "Sur", "Centro", "Oriente", "CONAREME")
)

ggplot(x) +
  geom_bar(aes(region, fill = genero_factor)) +
  labs(x = "Región", y = "Número de postulantes", fill = "Género") +
  scale_fill_manual(values = c("No género asignado" = "grey80", "Masculino" = "#619CFF", "Femenino" = "#F8766D"))

ggsave(here("output/graph_14.png"))
```

Visualizar estos datos en una tabla con las siguientes columnas:

- Año
- Región
  - Número de postulantes (total)
  - Número de postulantes con género asignado
  - Número de mujeres y hombre (y porcentajes)

```{r tabla-8}
x <- dat %>% group_by(year, region) %>%
  summarize(
    n_postulantes = length(year),
    n_genero = sum(!is.na(genero)),
    p_genero = sum(!is.na(genero)) / length(year),
    n_mujeres = sum(genero == 1, na.rm = TRUE),
    p_mujeres = sum(genero == 1, na.rm = TRUE) / sum(!is.na(genero)),
    n_hombres = sum(genero == 0, na.rm = TRUE),
    p_hombres = sum(genero == 0, na.rm = TRUE) / sum(!is.na(genero))
  )
x

write.table(x, here("output/tabla_8.txt"), sep = "\t", row.names = FALSE)
```

## Gráficos por región

Usar gráficos de barras y líneas para representar la distribución de género y tendencias agrupadas por región (como se hizo anteriormente).

```{r graph-15}
x <- dat

x$region <- factor(
  x$region,
  levels = c("Oriente", "Centro", "Norte", "Sur", "Lima")
)

ggplot(x) +
  geom_bar(aes(year, fill = region)) +
  labs(x = "Año", y = "Número de postulantes", fill = "Región")

ggsave(here("output/graph_15.png"))
```

```{r graph-16}
p_region <- dat %>%
  group_by(year, region) %>%
  summarize(p = mean(genero, na.rm = TRUE))

p_years <- dat %>%
  group_by(year) %>%
  summarize(p_total = mean(genero, na.rm = TRUE))

p_data <- left_join(p_region, p_years, by = c("year"))

ggplot(p_data) +
  geom_line(aes(year, p_total)) +
  geom_line(aes(year, p, color = as.factor(region))) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  labs(x = "Año", y = "Proporción de mujeres", color = "Región")

ggsave(here("output/graph_16.png"))
```

## Prueba estadística

Ahora, se podría realizar una prueba estadística para determinar si existen diferencias significativas en la distribución de género en las distintas regiones (independientemente del tiempo y ajustado al tiempo).

Para esto se puede realizar una prueba estadística para cada una de las especialidades, para compararlas con el resto (distribución global).

```{r}
# ---- Modelo sin incluir variable de tiempo (año) ----

x <- dat[!is.na(dat$genero), ]
regions <- unique(x$region)
list_models <- vector("list", length(regions))

for (i in seq_along(regions)) {
  list_models[[i]] <- glm(
    genero ~ ifelse(
      region == regions[[i]],
      1, 0
    ),
    data = x
  )
}
list_models_summary <- lapply(list_models, summary)
names(list_models_summary) <- regions

df_res <- data.frame("Región" = regions)
df_res$p_values <- unlist(lapply(list_models_summary, \(x) x$coefficients[2, 4]))

# Bonferroni correction
p_value_corrected <- 0.05 / length(p_values)

or_values <- conf_int_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
  conf_int_values[[i]] <- exp(
    suppressMessages(
      # Confidence interval of specialty
      confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
    )
  )
}
df_res$or_values <- unlist(or_values)
df_res$conf_int_values <- conf_int_values

i <- df_res$p_values <= p_value_corrected
df_res$p_value_significant <- i
regions[i]

df_res$conf_int_lower <- unlist(lapply(df_res$conf_int_values, \(x) x[1]))
df_res$conf_int_upper <- unlist(lapply(df_res$conf_int_values, \(x) x[2]))
df_res <- df_res[, colnames(df_res) != "conf_int_values"]
df_res
```

```{r tabla-9}
# ---- Modelo incluyendo (ajustado a) la variable tiempo (año) ----

x <- dat[!is.na(dat$genero), ]
regions <- unique(x$region)
list_models <- vector("list", length(regions))

for (i in seq_along(regions)) {
  list_models[[i]] <- glm(
    genero ~ ifelse(
      region == regions[[i]],
      1, 0
    ) + year,
    data = x
  )
}
list_models_summary <- lapply(list_models, summary)
names(list_models_summary) <- regions

df_res <- data.frame("Región" = regions)
df_res$p_values <- unlist(lapply(list_models_summary, \(x) x$coefficients[2, 4]))

# Bonferroni correction
p_value_corrected <- 0.05 / length(p_values)

or_values <- conf_int_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
  conf_int_values[[i]] <- exp(
    suppressMessages(
      # Confidence interval of specialty
      confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
    )
  )
}
df_res$or_values <- unlist(or_values)
df_res$conf_int_values <- conf_int_values

i <- df_res$p_values <= p_value_corrected
df_res$p_value_significant <- i
regions[i]

df_res$conf_int_lower <- unlist(lapply(df_res$conf_int_values, \(x) x[1]))
df_res$conf_int_upper <- unlist(lapply(df_res$conf_int_values, \(x) x[2]))
df_res <- df_res[, colnames(df_res) != "conf_int_values"]
df_res

write.table(df_res, here("output/tabla_9.txt"), sep = "\t", row.names = FALSE)
```

```{r}
# ---- Modelo excluyendo a la región Oriente ----

x <- dat[!is.na(dat$genero), ]
x <- dat[dat$region != "Oriente", ]

regions <- unique(x$region)
list_models <- vector("list", length(regions))

for (i in seq_along(regions)) {
  list_models[[i]] <- glm(
    genero ~ ifelse(
      region == regions[[i]],
      1, 0
    ) + year,
    data = x
  )
}
list_models_summary <- lapply(list_models, summary)
names(list_models_summary) <- regions

df_res <- data.frame("Región" = regions)
df_res$p_values <- unlist(lapply(list_models_summary, \(x) x$coefficients[2, 4]))

# Bonferroni correction
p_value_corrected <- 0.05 / length(p_values)

or_values <- conf_int_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
  conf_int_values[[i]] <- exp(
    suppressMessages(
      # Confidence interval of specialty
      confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
    )
  )
}
df_res$or_values <- unlist(or_values)
df_res$conf_int_values <- conf_int_values

i <- df_res$p_values <= p_value_corrected
df_res$p_value_significant <- i
regions[i]

df_res$conf_int_lower <- unlist(lapply(df_res$conf_int_values, \(x) x[1]))
df_res$conf_int_upper <- unlist(lapply(df_res$conf_int_values, \(x) x[2]))
df_res <- df_res[, colnames(df_res) != "conf_int_values"]
df_res
```


```{r}
# ---- Modelo incuyendo interacción ----

x <- dat[!is.na(dat$genero), ]
regions <- unique(x$region)
list_models <- vector("list", length(regions))

for (i in seq_along(regions)) {
  list_models[[i]] <- glm(
    genero ~ ifelse(
      region == regions[[i]],
      1, 0
    ) * year,
    data = x
  )
}
list_models_summary <- lapply(list_models, summary)
names(list_models_summary) <- regions

df_res <- data.frame("Región" = regions)
df_res$p_values <- unlist(lapply(list_models_summary, \(x) x$coefficients[2, 4]))

# Bonferroni correction
p_value_corrected <- 0.05 / length(p_values)

or_values <- conf_int_values <- vector("list", length(list_models))
for (i in seq_along(list_models)) {
  or_values[[i]] <- exp(coef(list_models[[i]]))[2] # OR of specialty
  conf_int_values[[i]] <- exp(
    suppressMessages(
      # Confidence interval of specialty
      confint(list_models[[i]], level = 1 - p_value_corrected)[2, ]
    )
  )
}
df_res$or_values <- unlist(or_values)
df_res$conf_int_values <- conf_int_values

i <- df_res$p_values <= p_value_corrected
df_res$p_value_significant <- i
regions[i]

df_res$conf_int_lower <- unlist(lapply(df_res$conf_int_values, \(x) x[1]))
df_res$conf_int_upper <- unlist(lapply(df_res$conf_int_values, \(x) x[2]))
df_res <- df_res[, colnames(df_res) != "conf_int_values"]
df_res
```

Si se realiza un modelo estadístico final, ajustando por región y especialidades.

```{r}
x <- dat[!is.na(dat$genero), ]
model <- glm(genero ~ year + region + especialidad, family = "binomial", data = x)
model_summary <- summary(model)
model_summary$coefficients[2, ] # p_value
exp(coef(model)[2]) # odds ratio
exp(confint(model, parm = 2)) # confidence interval
```

